---
import { isLoggedIn } from "../../../utils"
import MainLayout from "../../../layouts/MainLayout.astro"

// check if already logged in
const token = (Astro.cookies.get("token") || {})?.value
const tokenExpiry = (Astro.cookies.get("tokenExpiry") || {})?.value

if (!isLoggedIn({ token, tokenExpiry })) {
    return Astro.redirect("/login")
}

const getShop = async (id) => {
    const shopsEndpoint = import.meta.env.BASE_API_URL + import.meta.env.API_VERSION + "/shops/" + id + "/"
    const query = await fetch(shopsEndpoint, {
        method: "GET",
        headers: {
            "Authorization": `Token ${token}`,
            "Content-Type": "application/json"
        }
    })
    const response = await query.json()
    return response
}

const getTicket = async (id) => {
    const ticketEndpoint = import.meta.env.BASE_API_URL + import.meta.env.API_VERSION + "/tickets/" + id
    const query = await fetch(ticketEndpoint, {
        method: "GET",
        headers: {
            "Authorization": `Token ${token}`,
            "Content-Type": "application/json"
        }
    })
    const response = await query.json()
    return response
}

const { id } = Astro.params
const ticket = await getTicket(id)
const shop = await getShop(ticket.shop)
---

<MainLayout title="Dashboard">
    <h1>Eliminar Ticket</h1>
    <p>Â¿Seguro que quieres eliminar este ticket?</p>
    <ul>
        <li><strong>ID:</strong> {ticket.id}</li>
        <li><strong>Fecha:</strong> {ticket.date}</li>
        <li><strong>Importe:</strong> {ticket.amount}</li>
        <li><strong>Tienda:</strong> {shop.name}</li>
    </ul>

    <a href="/dashboard">Volver</a> | <a id="deleteButton" href=`/dashboard/deleteticket/confirm/${id}/`>Confirmar</a>
</MainLayout>